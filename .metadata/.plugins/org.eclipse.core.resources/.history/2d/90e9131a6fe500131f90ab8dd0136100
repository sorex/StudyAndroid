package com.jasperxu.app;

import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Enumeration;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;

import com.jasperxu.app.demo.DirectoryActivity;
import com.jasperxu.util.FileHelp;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Environment;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;

public class DemoMainActivity extends Activity {

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_demo_main);

		LinearLayout layout = (LinearLayout) findViewById(R.id.layout);
		Button btn = new Button(this);
		btn.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,
				ViewGroup.LayoutParams.WRAP_CONTENT));
		btn.setText("人教版六年级数学下册");
		btn.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View view) {
				Intent intent = new Intent(getBaseContext(), DirectoryActivity.class);
				intent.putExtra("BookGuid", "e1844e31afa44ea3b01053f8c6e6e075");
				startActivity(intent);
				overridePendingTransition(R.anim.slide_in_right, R.anim.slide_out_left);
				finish();
			}
		});
		layout.addView(btn);
	}

	public void DownFiles() {
		String savePathString = Environment.getExternalStorageDirectory() + "/com.jasperxu.app/";
		String fileNameString = "e1844e31afa44ea3b01053f8c6e6e075.zip";

		try {
			// 下载对应的文件
			FileHelp.downFile("http://192.168.1.102/temp/e1844e31afa44ea3b01053f8c6e6e075.zip", savePathString+"temp/",
					fileNameString);

			File file = new File(savePathString+"temp/" + fileNameString);
			if (file.exists()) {
				// 解压文件
				ZipFile zf = new ZipFile(file);
				
				for (Enumeration<?> entries = zf.entries(); entries.hasMoreElements();) {
		            ZipEntry entry = ((ZipEntry)entries.nextElement());
		            InputStream input = zf.getInputStream(entry);
		            String str = savePathString + entry.getName();
		            File desFile = new File(str);
		            if (!desFile.exists()) {
		                File fileParentDir = desFile.getParentFile();
		                if (!fileParentDir.exists()) {
		                    fileParentDir.mkdirs();
		                }
		                desFile.createNewFile();
		            }
		            OutputStream out = new FileOutputStream(desFile);
		            byte buffer[] = new byte[4096];
		            int realLength;
		            while ((realLength = input.read(buffer)) > 0) {
		                out.write(buffer, 0, realLength);
		            }
		            input.close();
		            out.close();
				}
				
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
